<%- include('../layout/main') %>

<div class="row">


<!-- Commands List -->
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h5 class="card-title mb-0">
                    <i class="fas fa-code text-success"></i>
                    Available Commands
                </h5>
            </div>
            <div class="card-body">
                <% if (commands.length === 0) { %>
                    <div class="text-center py-5">
                        <i class="fas fa-code fa-3x text-muted mb-3"></i>
                        <h5>No Commands Found</h5>
                        <p class="text-muted">No command files were found in the commands directory.</p>
                    </div>
                <% } else { %>
                    <div class="row">
                        <% commands.forEach(command => { %>
                            <div class="col-lg-6 mb-4">
                                <div class="card h-100 <%= command.error ? 'border-danger' : '' %>">
                                    <div class="card-body">
                                        <div class="d-flex justify-content-between align-items-start mb-3">
                                            <h5 class="card-title mb-0">
                                                <span class="badge bg-<%= command.error ? 'danger' : 'primary' %> me-2">
                                                    <%= command.name %>
                                                </span>
                                            </h5>
                                            <div class="btn-group" role="group">
                                                <button class="btn btn-sm btn-outline-primary" onclick="viewCommand('<%= command.file.replace('.js', '') %>')">
                                                    <i class="fas fa-eye"></i>
                                                </button>
                                                <button class="btn btn-sm btn-outline-warning" onclick="editCommand('<%= command.file.replace('.js', '') %>')">
                                                    <i class="fas fa-edit"></i>
                                                </button>
                                                <button class="btn btn-sm btn-outline-danger" onclick="deleteCommand('<%= command.file.replace('.js', '') %>')">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </div>
                                        </div>
                                        
                                        <p class="card-text text-muted mb-2">
                                            <%= command.description %>
                                        </p>
                                        
                                        <div class="mb-2">
                                            <small class="text-muted">
                                                <strong>Usage:</strong> <code><%= command.usage %></code>
                                            </small>
                                        </div>
                                        
                                        <div class="d-flex justify-content-between align-items-center">
                                            <span class="badge bg-secondary"><%= command.category %></span>
                                            <% if (command.cooldown > 0) { %>
                                                <small class="text-muted">
                                                    <i class="fas fa-clock"></i> <%= command.cooldown %>s cooldown
                                                </small>
                                            <% } %>
                                        </div>
                                        
                                        <% if (command.error) { %>
                                            <div class="alert alert-danger mt-2 mb-0">
                                                <small>
                                                    <i class="fas fa-exclamation-triangle"></i>
                                                    Error loading this command
                                                </small>
                                            </div>
                                        <% } %>
                                    </div>
                                </div>
                            </div>
                        <% }); %>
                    </div>
                <% } %>
            </div>
        </div>
    </div>
</div>

<!-- View Command Modal -->
<div class="modal fade" id="viewCommandModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Command Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div id="commandDetails">Loading...</div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Edit Command Modal -->
<div class="modal fade" id="editCommandModal" tabindex="-1">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Command</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="editCommandForm">
                    <div class="mb-3">
                        <label for="commandCode" class="form-label">Command Code</label>
                        <textarea class="form-control" id="commandCode" name="fileContent" rows="20" style="font-family: monospace;"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="saveCommand()">Save Changes</button>
            </div>
        </div>
    </div>
</div>

<!-- Create Command Modal -->
<div class="modal fade" id="createCommandModal" tabindex="-1">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Create New Command</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="createCommandForm">
                    <div class="mb-3">
                        <label for="newCommandName" class="form-label">Command Name</label>
                        <input type="text" class="form-control" id="newCommandName" name="name" placeholder="e.g., help, info" required>
                    </div>
                    <div class="mb-3">
                        <label for="newCommandCode" class="form-label">Command Code</label>
                        <textarea class="form-control" id="newCommandCode" name="fileContent" rows="15" style="font-family: monospace;" required>module.exports = {
    name: 'example',
    description: 'Example command description',
    usage: '.example',
    category: 'general',
    cooldown: 3,
    
    async execute(context) {
        const { reply, sender } = context;
        await reply('Hello from new command!');
    }
};</textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-success" onclick="saveNewCommand()">Create Command</button>
            </div>
        </div>
    </div>
</div>

<script>
let currentCommandName = null;

function viewCommand(name) {
    fetch(`/command/api/command/${name}`)
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                const command = data.data;
                document.getElementById('commandDetails').innerHTML = `
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <strong>Name:</strong> ${command.name || 'Unknown'}
                        </div>
                        <div class="col-md-6">
                            <strong>Category:</strong> ${command.category || 'General'}
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <strong>Usage:</strong> <code>${command.usage || 'N/A'}</code>
                        </div>
                        <div class="col-md-6">
                            <strong>Cooldown:</strong> ${command.cooldown || 0}s
                        </div>
                    </div>
                    <div class="mb-3">
                        <strong>Description:</strong><br>
                        ${command.description || 'No description'}
                    </div>
                    <div class="mb-3">
                        <strong>File:</strong> <code>${name}.js</code>
                    </div>
                    <div>
                        <strong>Code:</strong>
                        <pre style="background-color: #f8f9fa; padding: 1rem; border-radius: 0.5rem; max-height: 300px; overflow-y: auto;"><code>${command.fileContent}</code></pre>
                    </div>
                `;
                new bootstrap.Modal(document.getElementById('viewCommandModal')).show();
            }
        })
        .catch(error => {
            console.error('Error fetching command:', error);
            alert('Failed to load command details');
        });
}

function editCommand(name) {
    currentCommandName = name;
    fetch(`/command/api/command/${name}`)
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                document.getElementById('commandCode').value = data.data.fileContent;
                new bootstrap.Modal(document.getElementById('editCommandModal')).show();
            }
        })
        .catch(error => {
            console.error('Error fetching command:', error);
            alert('Failed to load command details');
        });
}

function saveCommand() {
    if (!currentCommandName) return;
    
    const formData = new FormData(document.getElementById('editCommandForm'));
    const updateData = {
        fileContent: formData.get('fileContent')
    };
    
    fetch(`/command/api/command/${currentCommandName}`, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify(updateData)
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            alert('Command updated successfully');
            location.reload();
        } else {
            alert('Failed to update command: ' + data.error);
        }
    })
    .catch(error => {
        console.error('Error updating command:', error);
        alert('Failed to update command');
    });
}

function createCommand() {
    new bootstrap.Modal(document.getElementById('createCommandModal')).show();
}

function saveNewCommand() {
    const formData = new FormData(document.getElementById('createCommandForm'));
    const commandData = {
        name: formData.get('name'),
        fileContent: formData.get('fileContent')
    };
    
    if (!commandData.name || !commandData.fileContent) {
        alert('Please fill in all required fields');
        return;
    }
    
    fetch('/command/api/command', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify(commandData)
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            alert('Command created successfully');
            location.reload();
        } else {
            alert('Failed to create command: ' + data.error);
        }
    })
    .catch(error => {
        console.error('Error creating command:', error);
        alert('Failed to create command');
    });
}

function deleteCommand(name) {
    if (confirm(`Are you sure you want to delete the command "${name}"?`)) {
        fetch(`/command/api/command/${name}`, {
            method: 'DELETE'
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                alert('Command deleted successfully');
                location.reload();
            } else {
                alert('Failed to delete command: ' + data.error);
            }
        })
        .catch(error => {
            console.error('Error deleting command:', error);
            alert('Failed to delete command');
        });
    }
}
</script>